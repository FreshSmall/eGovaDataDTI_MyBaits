<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
						http://www.springframework.org/schema/context 
    					http://www.springframework.org/schema/context/spring-context-4.0.xsd
    					http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <context:component-scan base-package="cn.com.egova">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>


    <!-- 任务及线程池 -->
    <task:annotation-driven executor="asyncExecutor" />
    <task:executor id="asyncExecutor" pool-size="100-10000" queue-capacity="10"/>

    <!-- 载入属性文件 -->
    <context:property-placeholder location="classpath:*.properties" file-encoding="utf-8"/>

    <bean id="dataSourcev14" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.v14.driverClassName}"/>
        <property name="url" value="${jdbc.v14.url}"/>
        <property name="username" value="${jdbc.v14.username}"/>
        <property name="password" value="${jdbc.v14.password}"/>
        <!--<property name="defaultAutoCommit" value="false"/>-->
    </bean>


    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourcev14"/>
        <!--自动扫描mapping.xml文件-->
        <property name="mapperLocations" value="classpath:cn/com/egova/mapper/*.xml"></property>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.com.egova.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSourcev14"/>
    </bean>


    <!-- Oracle大对象处理 -->
    <bean id="nativeJdbcExtractor"
          class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor"
          lazy-init="true"/>
    <bean id="lobHandler" class="org.springframework.jdbc.support.lob.OracleLobHandler" lazy-init="true">
        <property name="nativeJdbcExtractor" ref="nativeJdbcExtractor"/>
    </bean>

    <!-- 通过aop配置事务 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourcev14"/>
    </bean>
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="load*" read-only="true"/>
            <tx:method name="list*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="update*" propagation="REQUIRES_NEW"/>
        </tx:attributes>
    </tx:advice>
    <aop:config proxy-target-class="false">
        <aop:pointcut id="serviceAllOperation"
                      expression="execution(* cn.com.egova.service.impl.StatInfoServiceImpl.*(..))||execution(* cn.com.egova.dao.StatInfoMapper.*(..))"/>
        <aop:advisor advice-ref="txAdvice"
                     pointcut-ref="serviceAllOperation"/>
    </aop:config>

    <!-- 支持通过注解添加事务 -->
    <!--<tx:annotation-driven transaction-manager="txManager"/>-->
    <!--<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>-->

    <!-- 注解添方式添加缓存
    <ehcache:annotation-driven cache-manager="ehCacheManager" /> 
 	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">    
       <property name="configLocation" value="classpath:ehcache.xml" />  
    </bean>  
   -->
    <aop:aspectj-autoproxy expose-proxy="true"/>
</beans>
