<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
						http://www.springframework.org/schema/context
    					http://www.springframework.org/schema/context/spring-context-4.0.xsd
    					http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

	<context:property-placeholder location="classpath:*.properties" file-encoding="utf-8"/>

	<task:annotation-driven scheduler="qbScheduler" mode="proxy"/>
	<task:scheduler id="qbScheduler" pool-size="10"/>
	<!--<task:scheduled-tasks>
		<task:scheduled ref="recFreshTask" method="freshRec" cron="0/3 * *  * * ?"/>
	</task:scheduled-tasks>-->


	<bean id="dataSourcev14" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.v14.driverClassName}"/>
		<property name="url" value="${jdbc.v14.url}"/>
		<property name="username" value="${jdbc.v14.username}"/>
		<property name="password" value="${jdbc.v14.password}"/>
	</bean>

	<bean id="dataSourcev11" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.v11.driverClassName}"/>
		<property name="url" value="${jdbc.v11.url}"/>
		<property name="username" value="${jdbc.v11.username}"/>
		<property name="password" value="${jdbc.v11.password}"/>
	</bean>



	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourcev11" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:cn/com/egova/mapper/*.xml"></property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.com.egova.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSourcev11"/>
	</bean>


	<!-- Oracle大对象处理 -->
	<bean id="nativeJdbcExtractor"
		  class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor"
		  lazy-init="true"/>
	<bean id="lobHandler"  class="org.springframework.jdbc.support.lob.OracleLobHandler" lazy-init="true">
		<property name="nativeJdbcExtractor" ref="nativeJdbcExtractor"/>
	</bean>

	<!-- 通过aop配置事务 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourcev11"/>
	</bean>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="update*" propagation="SUPPORTS"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="serviceAllOperation"
					  expression="execution(* cn.com.egova.dao.StatInfoMapper.*(..))" />
		<aop:advisor advice-ref="txAdvice"
					 pointcut-ref="serviceAllOperation" order="3" />
	</aop:config>

	<!-- 支持通过注解添加事务
    <tx:annotation-driven proxy-target-class="true" transaction-manager="txManager"/>
 -->
	<!-- 注解添方式添加缓存
    <ehcache:annotation-driven cache-manager="ehCacheManager" />
     <bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
       <property name="configLocation" value="classpath:ehcache.xml" />
    </bean>
   -->
</beans>
